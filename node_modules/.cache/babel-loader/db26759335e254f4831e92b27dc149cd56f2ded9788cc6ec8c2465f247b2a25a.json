{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frien\\\\Dropbox\\\\PC\\\\Desktop\\\\project\\\\React\\\\mysql-connect-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const franchiseData = [];\n  async function fetchData() {\n    try {\n      const res = await axios.get('http://localhost:3000/api/products');\n      console.log(res.data.product);\n      franchiseData.push(res.data.products);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  }\n  fetchData();\n  const [targetIndustry, setTargetIndustry] = useState('원하는 업종');\n\n  // 해당 업종에 해당하는 상호 출력\n  const matchingFranchises = franchiseData.filter(data => data.업종 === targetIndustry).map(data => data.상호);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\uC6D0\\uD558\\uB294 \\uC5C5\\uC885:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: targetIndustry,\n        onChange: e => setTargetIndustry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: franchiseData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), matchingFranchises.map((franchise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: franchise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"neKMGse2AE4//Q67J8ivluED0E8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","franchiseData","fetchData","res","get","console","log","data","product","push","products","error","message","targetIndustry","setTargetIndustry","matchingFranchises","filter","업종","map","상호","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","franchise","index","_c","$RefreshReg$"],"sources":["C:/Users/frien/Dropbox/PC/Desktop/project/React/mysql-connect-project/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\n\nfunction App() {\n    const franchiseData = [];\n    async function fetchData() {\n        try {\n          const res = await axios.get('http://localhost:3000/api/products');\n          console.log(res.data.product);\n          franchiseData.push(res.data.products);\n        } catch (error) {\n          console.error('Error fetching data:', error.message);\n        }\n      }\n\n      fetchData();\n\n      const [targetIndustry, setTargetIndustry] = useState('원하는 업종');\n\n      // 해당 업종에 해당하는 상호 출력\n      const matchingFranchises = franchiseData\n        .filter(data => data.업종 === targetIndustry)\n        .map(data => data.상호);\n    \n      return (\n        <div>\n          <label>\n            원하는 업종:\n            <input\n              type=\"text\"\n              value={targetIndustry}\n              onChange={(e) => setTargetIndustry(e.target.value)}\n            />\n          </label>\n          <ul>\n            <li>{franchiseData}</li>\n            {matchingFranchises.map((franchise, index) => (\n              <li key={index}>{franchise}</li>\n            ))}\n          </ul>\n        </div>\n      );\n}\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,aAAa,GAAG,EAAE;EACxB,eAAeC,SAASA,CAAA,EAAG;IACvB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,oCAAoC,CAAC;MACjEC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAACC,OAAO,CAAC;MAC7BP,aAAa,CAACQ,IAAI,CAACN,GAAG,CAACI,IAAI,CAACG,QAAQ,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACtD;EACF;EAEAV,SAAS,CAAC,CAAC;EAEX,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,QAAQ,CAAC;;EAE9D;EACA,MAAMoB,kBAAkB,GAAGd,aAAa,CACrCe,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACU,EAAE,KAAKJ,cAAc,CAAC,CAC1CK,GAAG,CAACX,IAAI,IAAIA,IAAI,CAACY,EAAE,CAAC;EAEvB,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,GAAO,kCAEL,eAAAtB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAET,cAAe;QACtBU,QAAQ,EAAGC,CAAC,IAAKV,iBAAiB,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACR/B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAKnB;MAAa;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACvBd,kBAAkB,CAACG,GAAG,CAAC,CAACY,SAAS,EAAEC,KAAK,kBACvCjC,OAAA;QAAAsB,QAAA,EAAiBU;MAAS,GAAjBC,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd;AAAC7B,EAAA,CAvCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}