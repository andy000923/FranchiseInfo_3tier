{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frien\\\\Dropbox\\\\PC\\\\Desktop\\\\project\\\\React\\\\mysql-connect-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [franchiseData, setFranchiseData] = useState([]);\n  const [uniqueIndustries, setUniqueIndustries] = useState([]);\n  const [selectedIndustry, setSelectedIndustry] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await axios.get('http://localhost:3000/api/products');\n        setFranchiseData([...res.data.products]);\n\n        // 중복을 제거한 업종 목록 생성\n        const industries = [...new Set(res.data.products.map(data => data.업종))];\n        setUniqueIndustries(industries);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      children: [\"\\uD558\\uB2E8 \\uBC14\\uB97C \\uD1B5\\uD574 \\uD504\\uB79C\\uCC28\\uC774\\uC988\\uB97C \\uCC28\\uB9AC\\uACE0 \\uC2F6\\uC740 \\uC5C5\\uC885 \\uAC80\\uC0C9\", /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select\",\n        value: selectedIndustry,\n        onChange: e => setSelectedIndustry(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uBAA8\\uB4E0 \\uC5C5\\uC885\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), uniqueIndustries.map((industry, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: industry,\n          children: industry\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"franchise-list\",\n      children: franchiseData.filter(data => selectedIndustry === '' || data.업종 === selectedIndustry).map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"franchise-item\",\n        children: data.영업표지\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/bjsvC1xjm7E8+oqScxHJqL6heU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","franchiseData","setFranchiseData","uniqueIndustries","setUniqueIndustries","selectedIndustry","setSelectedIndustry","fetchData","res","get","data","products","industries","Set","map","업종","error","console","message","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","industry","index","filter","영업표지","_c","$RefreshReg$"],"sources":["C:/Users/frien/Dropbox/PC/Desktop/project/React/mysql-connect-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'\n\nfunction App() {\n  const [franchiseData, setFranchiseData] = useState([]);\n  const [uniqueIndustries, setUniqueIndustries] = useState([]);\n  const [selectedIndustry, setSelectedIndustry] = useState('');\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await axios.get('http://localhost:3000/api/products');\n        setFranchiseData([...res.data.products]);\n\n        // 중복을 제거한 업종 목록 생성\n        const industries = [...new Set(res.data.products.map(data => data.업종))];\n        setUniqueIndustries(industries);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <label className=\"label\">\n        하단 바를 통해 프랜차이즈를 차리고 싶은 업종 검색\n        <select\n          className=\"select\"\n          value={selectedIndustry}\n          onChange={(e) => setSelectedIndustry(e.target.value)}\n        >\n          <option value=\"\">모든 업종</option>\n          {uniqueIndustries.map((industry, index) => (\n            <option key={index} value={industry}>\n              {industry}\n            </option>\n          ))}\n        </select>\n      </label>\n\n      {/* 선택한 업종에 해당하는 영업표지 출력 */}\n      <div className=\"franchise-list\">\n        {franchiseData\n          .filter(data => selectedIndustry === '' || data.업종 === selectedIndustry)\n          .map((data, index) => (\n            <div key={index} className=\"franchise-item\">\n              {data.영업표지}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}